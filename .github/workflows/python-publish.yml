# This workflow will upload a Python Package to PyPI when a release is created
# or a tag starting with 'v' is pushed
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation

name: Publish Python Package to PyPI

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*' # 当推送一个以'v'开头的标签时触发工作流

permissions:
  contents: read

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
    environment:
      name: pypi
      # OPTIONAL: uncomment and update to include your PyPI project URL in the deployment status:
      # url: https://pypi.org/p/YOURPROJECT
      #
      # ALTERNATIVE: if your GitHub Release name is the PyPI project version string
      # ALTERNATIVE: exactly, uncomment the following line instead:
      # url: https://pypi.org/project/YOURPROJECT/${{ github.event.release.name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build release distributions
        run: |
          python -m build

      - name: Publish release distributions to PyPI
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }} # 从secrets中获取PyPI令牌
        run: |
          twine upload --repository-url https://upload.pypi.org/legacy/ dist/*
